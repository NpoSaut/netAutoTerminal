<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:firmwareSources="clr-namespace:FirmwareBurner.ViewModels.FirmwareSources"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:property="clr-namespace:FirmwareBurner.ViewModels.Property"
                    xmlns:viewModels="clr-namespace:FirmwareBurner.ViewModels"
                    xmlns:firmwareBurner="clr-namespace:FirmwareBurner"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type Run}" x:Key="IconRunStyle">
        <Setter Property="FontFamily" Value="/Fonts/#burner" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextIconStyle">
        <Setter Property="FontFamily" Value="/Fonts/#burner" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextIconStyle}" x:Key="TextIconBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <DataTemplate DataType="{x:Type firmwareSources:FirmwareVersionViewModel}">
        <TextBlock>
            <Run Text="Версия" />
            <Run Text="{Binding Version, Mode=OneWay}" FontWeight="SemiBold" />
            <Run Text="{Binding Label, Mode=OneWay}" FontWeight="SemiBold" />
            <Run Text="от" />
            <Run Text="{Binding ReleaseDate, Mode=OneWay}" />
        </TextBlock>
    </DataTemplate>

    <Style x:Key="ValidateableControlStyle" TargetType="ContentControl">
        <Style.Resources>

            <Style x:Key="HintIconStyle" TargetType="TextBlock" BasedOn="{StaticResource TextIconStyle}">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="8" />
                <Setter Property="Opacity" Value="0" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform />
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard x:Key="DisplaySuccessIconStoryboard" TargetName="SuccessIcon">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="10" Duration="0:0:0.25">
                    <DoubleAnimation.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.4" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
            <Storyboard x:Key="HideSuccessIconStoryboard" TargetName="SuccessIcon" FillBehavior="Stop">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" Duration="0:0:0.3"
                                 To="20">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseIn" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </Style.Resources>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Name="Holder" d:DataContext="{x:Static viewModels:SampleData.ValidateableTextProperty}"
                            Margin="{TemplateBinding Margin}">
                        <Border.Resources>
                            <Storyboard x:Key="ShakeInputStoryboard" TargetName="Presenter" FillBehavior="Stop">
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" From="-12.75"
                                                 To="0" Duration="0:0:0.7">
                                    <DoubleAnimation.EasingFunction>
                                        <ElasticEase />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="-1"
                                                 To="0" Duration="0:0:1">
                                    <DoubleAnimation.EasingFunction>
                                        <ElasticEase Oscillations="10" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </Border.Resources>
                        <Grid Name="Presenter">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0" Content="{TemplateBinding Content}" />
                            <TextBlock Grid.Row="0" Name="SuccessIcon" Style="{StaticResource HintIconStyle}"
                                       Foreground="{StaticResource ProjectOkayBrush}" Text="o" />
                            <TextBlock Grid.Row="1" Name="ErrorTextLabel" FontSize="11"
                                       Foreground="{StaticResource ProjectErrorBrush}"
                                       Text="{Binding ValidationErrorsText}" TextAlignment="Center" Opacity="0" />
                            <Grid.RenderTransform>
                                <TranslateTransform />
                            </Grid.RenderTransform>
                        </Grid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger SourceObject="{Binding}" EventName="Signal">
                                <ei:ControlStoryboardAction Storyboard="{StaticResource ShakeInputStoryboard}" />
                                <ei:ChangePropertyAction TargetName="ErrorTextLabel" PropertyName="Opacity" Value="1" Duration="0:0:0.5" />
                            </i:EventTrigger>
                            <ei:DataTrigger Binding="{Binding IsValid}" Value="True">
                                <ei:ChangePropertyAction TargetName="ErrorTextLabel" PropertyName="Opacity" Value="0"
                                                         Duration="0:0:0.5" />
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsValid}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisplaySuccessIconStoryboard}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideSuccessIconStoryboard}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextIconButton" TargetType="Button" BasedOn="{StaticResource TextButtonStyle}">
        <Setter Property="FontFamily" Value="/Fonts/#burner" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    </Style>

    <Style x:Key="SquareTextIconButton" BasedOn="{StaticResource TextIconButton}" TargetType="Button">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
    </Style>

</ResourceDictionary>